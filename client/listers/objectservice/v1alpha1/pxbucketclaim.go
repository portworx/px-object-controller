// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/portworx/px-object-controller/client/apis/objectservice/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PXBucketClaimLister helps list PXBucketClaims.
// All objects returned here must be treated as read-only.
type PXBucketClaimLister interface {
	// List lists all PXBucketClaims in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PXBucketClaim, err error)
	// PXBucketClaims returns an object that can list and get PXBucketClaims.
	PXBucketClaims(namespace string) PXBucketClaimNamespaceLister
	PXBucketClaimListerExpansion
}

// pXBucketClaimLister implements the PXBucketClaimLister interface.
type pXBucketClaimLister struct {
	indexer cache.Indexer
}

// NewPXBucketClaimLister returns a new PXBucketClaimLister.
func NewPXBucketClaimLister(indexer cache.Indexer) PXBucketClaimLister {
	return &pXBucketClaimLister{indexer: indexer}
}

// List lists all PXBucketClaims in the indexer.
func (s *pXBucketClaimLister) List(selector labels.Selector) (ret []*v1alpha1.PXBucketClaim, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PXBucketClaim))
	})
	return ret, err
}

// PXBucketClaims returns an object that can list and get PXBucketClaims.
func (s *pXBucketClaimLister) PXBucketClaims(namespace string) PXBucketClaimNamespaceLister {
	return pXBucketClaimNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PXBucketClaimNamespaceLister helps list and get PXBucketClaims.
// All objects returned here must be treated as read-only.
type PXBucketClaimNamespaceLister interface {
	// List lists all PXBucketClaims in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PXBucketClaim, err error)
	// Get retrieves the PXBucketClaim from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PXBucketClaim, error)
	PXBucketClaimNamespaceListerExpansion
}

// pXBucketClaimNamespaceLister implements the PXBucketClaimNamespaceLister
// interface.
type pXBucketClaimNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PXBucketClaims in the indexer for a given namespace.
func (s pXBucketClaimNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PXBucketClaim, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PXBucketClaim))
	})
	return ret, err
}

// Get retrieves the PXBucketClaim from the indexer for a given namespace and name.
func (s pXBucketClaimNamespaceLister) Get(name string) (*v1alpha1.PXBucketClaim, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pxbucketclaim"), name)
	}
	return obj.(*v1alpha1.PXBucketClaim), nil
}
